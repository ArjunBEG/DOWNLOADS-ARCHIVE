<!doctype html>
<html lang="en">
<head>
	<title>Will Change - Snook.ca</title>
	<meta name="viewport" content="width=device-width" />
		<link rev="canonical" type="text/html" href="https://snook.ca/archives/html_and_css/will-change">
	<meta property="og:url" content="https://snook.ca/archives/html_and_css/will-change">
	<meta property="og:title" content="Will Change">
	<meta property="og:description" name="description" content="Dealing with CSS performance can be quite interesting. Various factors, like what properties we use, can have detrimental effects on the usability of a page. 

I noticed that my site, as simple as i...">
	<meta property="og:type" content="article">
				<meta property="og:image" content="https://snk.ms/logo.gif">
		<meta name="twitter:card" content="summary">
				<meta name="theme-color" content="#680">
	<link rel="alternate" type="application/rss+xml" title="XML" href="https://snook.ca/jonathan/index.rdf"> 
<!--	<link rel="stylesheet" href="/css/snook-v10.css"> -->
<style>
/* A font by Jos Buivenga (exljbris) -> http://www.exljbris.nl */

@font-face { font-family: 'MuseoCustom'; src: url('/css/MuseoSans_500-webfont.woff2') format('woff2'), url('/css/MuseoSans_500-webfont.woff') format('woff'); font-weight: normal; font-style: normal; }
@font-face { font-family: 'Playfair Display'; font-style: normal; font-weight: 900; src: local('Playfair Display Black'), local('PlayfairDisplay-Black'), url('/css/playfair.woff2') format('woff2'), url(https://fonts.gstatic.com/s/playfairdisplay/v10/UC3ZEjagJi85gF9qFaBgIFG5nCscAKpKP81nraB-v6E.woff) format('woff'); unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }
html{background:#EEEEE6 url(/img/bg.png)}body{margin:0;padding:0;border:12px solid #680;font-family:'PT Serif',Georgia,Times,'Times New Roman',serif;background:url(/img/swash.svg) no-repeat 50% 0;background-size:1600px 200px;color:#333;line-height:1.7;min-height:calc(100vh - 24px)}img{border:0}figcaption{font-style:italic;font-size:90%;}p{margin-bottom:1.5em}hr{width:20%;}a{color:#680;transition:all .2s}a:hover{text-decoration:none}a:active,a:focus{background-color:rgba(51,51,51,.1)}blockquote{font-style:italic;font-size:95%;background:url(/img/comment.svg) no-repeat 2px 5px;margin:0;padding-left:20px}pre{margin-left:-20px;background:url(/img/code-bookmark.svg) no-repeat 0 0}pre code{display:block;margin-left:20px;padding:10px;font-size:90%;background-color:rgba(255,255,255,.5);overflow:auto}table{border:1px solid #666;border-width:1px 0;border-collapse:collapse;background-color:rgba(255,255,255,.5);margin-bottom:30px;font-size:90%}th{border:1px solid #666;border-width:1px 0;background-color:rgba(51,51,51,.1)}td{border:1px solid #CCC;border-width:1px 0;padding:2px 10px}.update{background-color:rgba(33,129,66,0.1);padding:5px 10px 1px;border-radius:5px}#header{font-family:'MuseoCustom','Century Gothic',Arial,Helvetica,sans-serif;font-size:13px;max-width:780px;margin:auto;line-height:12px;background:url(/img/snook-bookmark.svg) no-repeat;padding:0 20px}#header h1,#header h2{font-size:13px;font-weight:400;margin:0}#header h1{color:#680;padding-top:18px;text-transform:uppercase}#header h2 a{text-decoration:none;color:#333;display:block}#header h2 a:hover{color:#680}#header .nav{text-transform:uppercase;word-spacing:4px;padding-top:20px}#header .nav a{text-decoration:none;color:#333;padding-top:3px}#header .nav a:hover{color:#680}.blurb{line-height:1.3}#content{max-width:820px;margin:4em auto;background:url(/img/star.svg) no-repeat 3px 58px}#main{padding:40px 0 0;background:url(/img/line-v.png) no-repeat 100% 90%}#main .dt,#main .cat,#main .shorturl{font-family:Garamond,Georgia,Times,'Times New Roman',serif;text-transform:uppercase;font-size:13px;font-weight:700;color:#666;background:url(/img/line.png) no-repeat -200px 70%}#main h2{font-weight:900;font-size:28px;margin:7px 0 0;font-family:'Playfair Display',Garamond,serif;line-height:1.1;background:url(/img/line.png) no-repeat 100px 26px}#main h2 a{text-decoration:none;color:#444}#main h2 a:hover{color:#680}.article-image-small{margin-top:20px;text-align:center;background-color:#000;padding:6px;font-size:0;display:inline-block;}.article-image{text-align:center;background-color:rgba(0,0,0,.07);padding:14px 12px;font-size:0px;width:calc(100vw - 24px);position:relative;left:50%;right:50%;margin:20px -50vw 4rem -50vw;}#main .article.inside h1{font-weight:900;font-size:2em;margin:0 0 2em;font-family:'Playfair Display',Garamond,serif;line-height:40px;background:url(/img/line.png) no-repeat 100px 90%}#main .article.inside h2{font-family:'Playfair Display',Georgia,Times,'Times New Roman',serif;font-weight:900;font-size:1.5em;text-transform:none;background:none}@media only screen and (min-width: 480px){#main .article.inside{font-size:120%}}#main .article{margin-bottom:40px;padding:0 20px;background:url(/img/star.svg) no-repeat 2px 13px}#main .article:first-child{background:none}#main .article img{max-width:100%;max-height:80vh;}#main .article .abstract{font-size:110%;}#main .fullarticle{text-align:right;background:url(/img/line.png) no-repeat 190% 70%}#main .fullarticle a{text-transform:uppercase;text-decoration:none;color:#680;font-size:14px;padding:4px}#main .fullarticle a:hover{background-color:rgba(51,51,51,.1)}#main .meta{background:url(/img/star.svg) no-repeat 3px .3em;font-family:Garamond,Georgia,Times,'T\Aimes New Roman',serif;padding-left:20px;margin-top:40px}#main .shorturl .url{text-transform:none;color:#555}#comments .meta{background:url(/img/comment-bookmark.svg) no-repeat 0 3px}#comments .comment{background:url(/img/comment.svg) no-repeat 3px .6em}#comments .comment .meta .authorname{text-transform:uppercase}#comments .comment .meta .commentnumber a{float:right;color:rgba(51,51,51,.25);font-size:24px;text-decoration:none}#comments .comment .quote{padding-left:20px;font-size:95%;word-break:break-word}#comments .commentcount{text-transform:uppercase}#comments .comment .meta{background:url(/img/line.png) no-repeat 40px 1.1em}#comments .snook{background:url(/img/comment-snook.png) no-repeat 0 3px}#comments .snook .meta .commentnumber a{color:rgba(102,136,0,.5)}#comments .snook .meta .commentnumber a:hover{color:rgba(102,136,0,1)}h3#postcomments{text-transform:uppercase;font-weight:400;font-size:14px;background:url(/img/line.png) no-repeat 40px 14px;margin:0 20px}#comments_form{background:url(/img/line-v.png) no-repeat 10px 0;padding-left:20px}#comments_form .inputgroup{background:url(/img/line.png) no-repeat 100% 100%;margin-bottom:5px}#postmeta{margin-bottom:10px}#postdata{background:url(/img/line-v.png) no-repeat 100% 50%}#postdata textarea{width:100%;border:none;font-size:inherit;font-family:inherit;padding:10px;box-sizing:border-box}#postmeta label{width:80px;display:block;float:left;text-transform:uppercase;font-size:10px}#postmeta input{border:none;max-width:407px}#comments_form .formnote{font-size:80%}#commentsclosed{padding:10px;margin:20px 0;background:rgba(51,51,51,.1)}#livepreview{display:none}#main .article ul.projects{list-style:none;margin:0;padding:0;overflow:hidden}ul.projects li{margin:0 10px 20px 0;padding:0;float:left;width:240px;line-height:15px;list-style:none}ul.projects li img{float:left;margin-right:5px;border:5px solid #CCC}ul.projects li a:hover img{border-color:#BBCF7F}ul.projects li span{display:block;font-size:12px}#footer{clear:both;font-size:90%;margin-bottom:-12px;}#footer .shell{max-width:770px;margin:auto;}#footer #copyright p{font-family:MuseoCustom,Helvetica,sans-serif}#footer #copyright .shell{padding:0 25px 200px;background:url(/img/PolySnook.svgo.svg) no-repeat 50% 120%;background-size:400px 250px}iframe{max-width:100%;}
</style>
	<link rel="stylesheet" href="/css/snook-v10-print.css" media="print">	
</head>
<body>
	<div id="header">
		<h1>Snook.ca</h1>
		<h2><a href="/">LIFE &amp; TIMES of a WEB DEVELOPER</a></h2>
		<div class="nav"><a href="/about/">About</a> &middot;  <a href="/contact/">Contact</a> &middot; <a href="/archives/">Archives</a></div>

	</div>
	<div id="content">
	<div id="main">
		<div class="article inside">
	
	<h1>Will Change</h1>
		<p>Dealing with CSS performance can be quite interesting. Various factors, like what properties we use, can have detrimental effects on the usability of a page. </p>

<p>I noticed that my site, as simple as it is, was having a bit of an issue with the fixed background that I’ve had. The scroll performance just wasn’t as smooth as I wanted it to be. I don’t remember this ever being an issue when I first built the site but browsers change. </p>

<p>I decided to switch the fixed background to a static background and all was right with the world. I doubt anybody even noticed the change. </p>

<p>Of course, not every performance issue is so easy and inconsequential to fix. Issues like <code>box-shadow</code> or scroll-jacking are often considered required on a project to achieve a designed experience. </p>

<p>With more CSS features comes more complexity comes more possibility of introducing performance issues. Browsers recognized that certain CSS features needed to be handled differently in order to be more performant.</p>

<p>For example, transforms—especially in 3D space—could be offloaded to a GPU to be rendered more quickly. It is for this reason that it was discovered that if we force an element into 3D space using translateZ, even if we’re not actually moving it anywhere, we could get the performance gains we desired. </p>

<p>By abusing a property in this way, an expectation is created between browser developers and web developers—and not a good expectation. It’s like using floats for layout. We’re using a feature in a way for which it was never intended. </p>

<p>Browser developers decided to introduce a new property that more directly dealt with the performance issues while also making expectations clearer for web developers.</p>

<p>CSS now has a <code>will-change</code> property that allows us to tell the browser what things are likely to change and thus provide a hint to the browser that it should optimize these things. </p>

<p>The <code>will-change</code> property is normally used by specifying what CSS property is likely to change on this particular element. </p>

<pre><code>.modal {
    will-change: transform;
}
</code></pre>

<p>In this case, the transform may or may not actually ever be applied to the modal but we’re trying to tell the browser that maybe it will. </p>

<p>In applying this property, however, there’s an interesting side effect.</p>

<p>If we were doing a <code>transform:translateZ(0)</code>, the element would create a new stacking context and in some browsers, it’ll put the layer into its own rendering pipeline. Thus, giving us the performance increase we so desire. </p>

<p>Therefore, by applying <code>will-change: transform</code>, the browser will force the new stacking context regardless of whether the transform has been applied or not. </p>

<p>The key thing to note here is that <code>will-change</code> will only create a new stacking context if the property would also create a new stacking context. Since the <code>transform</code> property creates a new stacking context, <code>will-change: transform</code> creates a new stacking context. </p>

<p>If you did <code>will-change: display</code> then no new stacking context would be created because no <code>display</code> property value would create a new stacking context.</p>

<p>Let’s look at another example: <code>opacity</code>. An opacity with a value of 1 doesn’t create a new stacking context but a value less than 1 (like 0.9) does. When <code>will-change</code> is applied, then a new stacking context is <em>always</em> created. </p>

<h2>Browser support</h2>

<p><a href="http://caniuse.com/#feat=will-change">Not all browsers</a> have <code>will-change</code> implemented yet. Therefore, due to the behaviour of it creating a new stacking context, you’ll need to specify a CSS property that <em>does</em> create a new stacking context to achieve similar rendering results. </p>

<p>Chances are, if you’re playing with layering elements on a page, you’re already using <code>position</code> and <code>z-index</code> to achieve the proper stacking order and therefore may not ever run into this rather interesting side effect of the <code>will-change</code> property.</p>
	
</div>
<div class="meta">
	<div class="dt">Published March 15, 2016 </div>
	<div class="cat">Categorized as <a href="/archives/html_and_css/">HTML and CSS</a></div>
	<div class="shorturl">Short URL: <span class="url">https://snook.ca/s/1072</span></div>
</div>

<div id="comments">
	<div class="meta">
		<h2>Conversation</h2>
		<div class="commentcount">6 Comments &middot; <a href="/archives/html_and_css/will-change.rss">RSS feed</a></div>
		<div class="commentfeed"></div>
	</div>
	
		<div class="comment" id="c70873">
		<div class="meta">
			<div class="commentnumber"><a href="#c70873">1</a></div>
			<span class="authorname">Thierry Koblentz</span> said on March 16, 2016		</div>
		<div class="quote"><p>Hi Jonathan,<br />
fwiw, I don't like that property: <a href="//cssmojo.com/the-dark-side-of-the-will-change-property/">What nobody tells you about "will-change"</a>
</p>
</div>
	</div>
		<div class="comment" id="c70878">
		<div class="meta">
			<div class="commentnumber"><a href="#c70878">2</a></div>
			<span class="authorname">Anselm Hannemann</span> said on March 18, 2016		</div>
		<div class="quote"><p>It might be interesting to add that <a href="//twitter.com/dstorey/status/707990118485721088">Microsoft Edge has no intent to implement the property</a> because it does not need it.</p>
<p>@Thierry: Well, the same applies for using <code>translate3d()</code> or <code>translateZ()</code>—both also force browsers to render this in a different stacking context/on the GPU. I don’t see why this is a bad thing as if you’re going to use this property you have the intent to have it rendered on the GPU. Of course you need to test this but it is something a developer should do anyways when forcing an element to render differently.
</p>
</div>
	</div>
		<div class="comment" id="c70917">
		<div class="meta">
			<div class="commentnumber"><a href="#c70917">3</a></div>
			<span class="authorname">Peter</span> said on March 23, 2016		</div>
		<div class="quote"><p>In my research, and with Paul Irish's blessing - will-change is a no brainer on position fixed elements, but should be used sparsely on other elements. <a href="//peterdoes.it/2015/12/01/browser-paint-render-and-css-will-change-property/ ">I wrote about it</a> and linked to two great articles explaining the details.
</p>
</div>
	</div>
		<div class="comment snook" id="c70918">
		<div class="meta">
			<div class="commentnumber"><a href="#c70918">4</a></div>
			<span class="authorname">Jonathan Snook</span> said on March 23, 2016		</div>
		<div class="quote"><p>@Peter: If it's a no-brainer on fixed positioned elements, I have to wonder why the browser doesn't automatically try to optimize this. I think the goes to Anselm's comment that Edge won't implement it because it's not needed. I suspect <code>will-change</code> is something that won't ever really gain much traction. Much like we no longer really need to optimize CSS selectors. (If we ever really did.)
</p>
</div>
	</div>
		<div class="comment" id="c70919">
		<div class="meta">
			<div class="commentnumber"><a href="#c70919">5</a></div>
			<span class="authorname">David Storey</span> said on March 27, 2016		</div>
		<div class="quote"><p>@anselm: the translate3d hack is another good example of something people use as gospel, but is just a work around for WebKit/Blink constraints (not hardware accelerating 2d transforms). It never benefitted Opera (actually broke Opera for a time as it supported 2d but not 3d transforms) , and IE/Edge don't need it to put it on the GPU.
</p>
</div>
	</div>
		<div class="comment" id="c70920">
		<div class="meta">
			<div class="commentnumber"><a href="#c70920">6</a></div>
			<span class="authorname">Markus Stange</span> said on March 27, 2016		</div>
		<div class="quote"><p>I agree that browsers should automatically optimize <code>position: fixed</code>. It's really unfortunate that Chrome doesn't do it, and that as a result <code>will-change: transform</code> is now mostly used to work around that particular shortcoming. I believe the reason they don't optimize it is that they lose subpixel text anti-aliasing if they create a layer for the fixed element, and they interpret <code>will-change: transform</code> as an indication that the author doesn't require subpixel AA in that particular element.<br />
I work on Firefox and we've spent a great amount of effort to ensure that layerization does not affect text rendering. We layerize <code>position: fixed</code> and <code>background-attachment: fixed</code> by default. Moreover, we encourage people to only use <code>will-change</code> to hint at changes that the browser <em>can't</em> know ahead of time unless it reads the site's JS code and predicts what's going to happen.</p>
<p>Microsoft's position is surprising to me. <code>will-change</code> allows more optimizations than just hardware acceleration. Firefox on Windows uses hardware acceleration for all rendering, too, but it still benefits from <code>will-change: transform</code> if you're going to start a <code>transform</code> CSS animation on an element, because once the animation starts it doesn't have to create a new buffer for the animated element - it can just annotate the existing buffer for the element with the animation properties and have the animation run on the compositor thread.
</p>
</div>
	</div>
		


		<div id="commentsclosed">Sorry, comments are closed for this post. If you have any further questions or
	comments, feel free to <a href="/contact/">send them to me directly</a>.</div>
	</div>
	</div>
	</div>
	<div id="footer">
		<div id="copyright"><div class="shell">
<p class="blurb"> Hi. My name is Jonathan Snook and this is my site. I write about what interests me, which is usually web design, development, and technology. I'm also in the middle of a <a href="https://fifty.snook.ca/">food adventure</a> and I like <a href="https://nook.snook.ca/">whisky</a>.
    <span>I wrote <a href="http://smacss.com/">SMACSS</a>.  I <a href="http://twitter.com/snookca">tweet</a>. Want to <a href="/about/">learn more</a>? </span>
</p>
			<p>&copy; Jonathan Snook</p>
		</div></div>
	</div>
</body>
</html>
