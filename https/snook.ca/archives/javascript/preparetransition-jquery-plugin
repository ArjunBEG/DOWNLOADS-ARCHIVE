<!doctype html>
<html lang="en">
<head>
	<title>Handling CSS Transitions with prepareTransition  - Snook.ca</title>
	<meta name="viewport" content="width=device-width" />
		<link rev="canonical" type="text/html" href="https://snook.ca/archives/javascript/preparetransition-jquery-plugin">
	<meta property="og:url" content="https://snook.ca/archives/javascript/preparetransition-jquery-plugin">
	<meta property="og:title" content="Handling CSS Transitions with prepareTransition ">
	<meta property="og:description" name="description" content="

Using CSS transitions can be quite fun. But what's not fun is when you want to transition something that needs to use display:none or visibility:hidden (or really, any non-transitionable property)...">
	<meta property="og:type" content="article">
				<meta property="og:image" content="https://snk.ms/logo.gif">
		<meta name="twitter:card" content="summary">
				<meta name="theme-color" content="#680">
	<link rel="alternate" type="application/rss+xml" title="XML" href="https://snook.ca/jonathan/index.rdf"> 
<!--	<link rel="stylesheet" href="/css/snook-v10.css"> -->
<style>
/* A font by Jos Buivenga (exljbris) -> http://www.exljbris.nl */

@font-face { font-family: 'MuseoCustom'; src: url('/css/MuseoSans_500-webfont.woff2') format('woff2'), url('/css/MuseoSans_500-webfont.woff') format('woff'); font-weight: normal; font-style: normal; }
@font-face { font-family: 'Playfair Display'; font-style: normal; font-weight: 900; src: local('Playfair Display Black'), local('PlayfairDisplay-Black'), url('/css/playfair.woff2') format('woff2'), url(https://fonts.gstatic.com/s/playfairdisplay/v10/UC3ZEjagJi85gF9qFaBgIFG5nCscAKpKP81nraB-v6E.woff) format('woff'); unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215; }
html{background:#EEEEE6 url(/img/bg.png)}body{margin:0;padding:0;border:12px solid #680;font-family:'PT Serif',Georgia,Times,'Times New Roman',serif;background:url(/img/swash.svg) no-repeat 50% 0;background-size:1600px 200px;color:#333;line-height:1.7;min-height:calc(100vh - 24px)}img{border:0}figcaption{font-style:italic;font-size:90%;}p{margin-bottom:1.5em}hr{width:20%;}a{color:#680;transition:all .2s}a:hover{text-decoration:none}a:active,a:focus{background-color:rgba(51,51,51,.1)}blockquote{font-style:italic;font-size:95%;background:url(/img/comment.svg) no-repeat 2px 5px;margin:0;padding-left:20px}pre{margin-left:-20px;background:url(/img/code-bookmark.svg) no-repeat 0 0}pre code{display:block;margin-left:20px;padding:10px;font-size:90%;background-color:rgba(255,255,255,.5);overflow:auto}table{border:1px solid #666;border-width:1px 0;border-collapse:collapse;background-color:rgba(255,255,255,.5);margin-bottom:30px;font-size:90%}th{border:1px solid #666;border-width:1px 0;background-color:rgba(51,51,51,.1)}td{border:1px solid #CCC;border-width:1px 0;padding:2px 10px}.update{background-color:rgba(33,129,66,0.1);padding:5px 10px 1px;border-radius:5px}#header{font-family:'MuseoCustom','Century Gothic',Arial,Helvetica,sans-serif;font-size:13px;max-width:780px;margin:auto;line-height:12px;background:url(/img/snook-bookmark.svg) no-repeat;padding:0 20px}#header h1,#header h2{font-size:13px;font-weight:400;margin:0}#header h1{color:#680;padding-top:18px;text-transform:uppercase}#header h2 a{text-decoration:none;color:#333;display:block}#header h2 a:hover{color:#680}#header .nav{text-transform:uppercase;word-spacing:4px;padding-top:20px}#header .nav a{text-decoration:none;color:#333;padding-top:3px}#header .nav a:hover{color:#680}.blurb{line-height:1.3}#content{max-width:820px;margin:4em auto;background:url(/img/star.svg) no-repeat 3px 58px}#main{padding:40px 0 0;background:url(/img/line-v.png) no-repeat 100% 90%}#main .dt,#main .cat,#main .shorturl{font-family:Garamond,Georgia,Times,'Times New Roman',serif;text-transform:uppercase;font-size:13px;font-weight:700;color:#666;background:url(/img/line.png) no-repeat -200px 70%}#main h2{font-weight:900;font-size:28px;margin:7px 0 0;font-family:'Playfair Display',Garamond,serif;line-height:1.1;background:url(/img/line.png) no-repeat 100px 26px}#main h2 a{text-decoration:none;color:#444}#main h2 a:hover{color:#680}.article-image-small{margin-top:20px;text-align:center;background-color:#000;padding:6px;font-size:0;display:inline-block;}.article-image{text-align:center;background-color:rgba(0,0,0,.07);padding:14px 12px;font-size:0px;width:calc(100vw - 24px);position:relative;left:50%;right:50%;margin:20px -50vw 4rem -50vw;}#main .article.inside h1{font-weight:900;font-size:2em;margin:0 0 2em;font-family:'Playfair Display',Garamond,serif;line-height:40px;background:url(/img/line.png) no-repeat 100px 90%}#main .article.inside h2{font-family:'Playfair Display',Georgia,Times,'Times New Roman',serif;font-weight:900;font-size:1.5em;text-transform:none;background:none}@media only screen and (min-width: 480px){#main .article.inside{font-size:120%}}#main .article{margin-bottom:40px;padding:0 20px;background:url(/img/star.svg) no-repeat 2px 13px}#main .article:first-child{background:none}#main .article img{max-width:100%;max-height:80vh;}#main .article .abstract{font-size:110%;}#main .fullarticle{text-align:right;background:url(/img/line.png) no-repeat 190% 70%}#main .fullarticle a{text-transform:uppercase;text-decoration:none;color:#680;font-size:14px;padding:4px}#main .fullarticle a:hover{background-color:rgba(51,51,51,.1)}#main .meta{background:url(/img/star.svg) no-repeat 3px .3em;font-family:Garamond,Georgia,Times,'T\Aimes New Roman',serif;padding-left:20px;margin-top:40px}#main .shorturl .url{text-transform:none;color:#555}#comments .meta{background:url(/img/comment-bookmark.svg) no-repeat 0 3px}#comments .comment{background:url(/img/comment.svg) no-repeat 3px .6em}#comments .comment .meta .authorname{text-transform:uppercase}#comments .comment .meta .commentnumber a{float:right;color:rgba(51,51,51,.25);font-size:24px;text-decoration:none}#comments .comment .quote{padding-left:20px;font-size:95%;word-break:break-word}#comments .commentcount{text-transform:uppercase}#comments .comment .meta{background:url(/img/line.png) no-repeat 40px 1.1em}#comments .snook{background:url(/img/comment-snook.png) no-repeat 0 3px}#comments .snook .meta .commentnumber a{color:rgba(102,136,0,.5)}#comments .snook .meta .commentnumber a:hover{color:rgba(102,136,0,1)}h3#postcomments{text-transform:uppercase;font-weight:400;font-size:14px;background:url(/img/line.png) no-repeat 40px 14px;margin:0 20px}#comments_form{background:url(/img/line-v.png) no-repeat 10px 0;padding-left:20px}#comments_form .inputgroup{background:url(/img/line.png) no-repeat 100% 100%;margin-bottom:5px}#postmeta{margin-bottom:10px}#postdata{background:url(/img/line-v.png) no-repeat 100% 50%}#postdata textarea{width:100%;border:none;font-size:inherit;font-family:inherit;padding:10px;box-sizing:border-box}#postmeta label{width:80px;display:block;float:left;text-transform:uppercase;font-size:10px}#postmeta input{border:none;max-width:407px}#comments_form .formnote{font-size:80%}#commentsclosed{padding:10px;margin:20px 0;background:rgba(51,51,51,.1)}#livepreview{display:none}#main .article ul.projects{list-style:none;margin:0;padding:0;overflow:hidden}ul.projects li{margin:0 10px 20px 0;padding:0;float:left;width:240px;line-height:15px;list-style:none}ul.projects li img{float:left;margin-right:5px;border:5px solid #CCC}ul.projects li a:hover img{border-color:#BBCF7F}ul.projects li span{display:block;font-size:12px}#footer{clear:both;font-size:90%;margin-bottom:-12px;}#footer .shell{max-width:770px;margin:auto;}#footer #copyright p{font-family:MuseoCustom,Helvetica,sans-serif}#footer #copyright .shell{padding:0 25px 200px;background:url(/img/PolySnook.svgo.svg) no-repeat 50% 120%;background-size:400px 250px}iframe{max-width:100%;}
</style>
	<link rel="stylesheet" href="/css/snook-v10-print.css" media="print">	
</head>
<body>
	<div id="header">
		<h1>Snook.ca</h1>
		<h2><a href="/">LIFE &amp; TIMES of a WEB DEVELOPER</a></h2>
		<div class="nav"><a href="/about/">About</a> &middot;  <a href="/contact/">Contact</a> &middot; <a href="/archives/">Archives</a></div>

	</div>
	<div id="content">
	<div id="main">
		<div class="article inside">
	
	<h1>Handling CSS Transitions with prepareTransition </h1>
		

<p>Using CSS transitions can be quite fun. But what's not fun is when you want to transition something that needs to use display:none or visibility:hidden (or really, any non-transitionable property). </p>

<p>For example, let's say you have a dialog. When the user clicks on the close button, you want the dialog to fade out &mdash; a simple transition from <code>opacity:1</code> to <code>opacity:0</code>. The problem is that the element is still there, even though you can't see it. There's the <code>transitionEnd</code> event that you can use in JavaScript to set <code>display:none</code> at that time but that doesn't help you for browsers that don't support transitions.</p>

<p>I put together a small little jQuery plug-in called <a href="https://github.com/snookca/prepareTransition"><b>prepareTransition</b></a> to help out and is available on Github. Feedback is most welcome.</p>

<h2>Example Usage</h2>

<p>Let's say you had a dialog that you wanted to hide when someone clicks the close button. </p>

<pre><code>.dialog {
    position: absolute;
    /* and other dialoggy styles */
}

.is-hidden {
    display: none;
}

// and our jQuery:
$(".btn-close").click(function(){
    $(".dialog").addClass('is-hidden');
}) </code></pre>

<p>Now let's layer on some CSS transitions.</p>

<pre><code>.dialog {
    position: absolute;
    /* and other dialoggy styles */
    <b>opacity: 1;
    transition: opacity 1s; /* don't forget vendor prefixed */</b> 
}

.is-hidden {
    display: none;
    <b>opacity: 0;</b>
}

// and our jQuery:
$(".btn-close").click(function(){
    $(".dialog").addClass('is-hidden');
}) </code></pre>

<p>In browsers that don't support transitions, this will still work but for browsers that do support transitions, this doesn't work. Why is that? The display property ends up removing the element from flow before the animation even starts. Clearly less than ideal.</p>

<p>As mentioned at the beginning of this article, I could remove <code>display: none</code> from <code>is-hidden</code> and then use the <code>transitionEnd</code> event to add it back in but then I don't have something that works in browsers that don't support transitions.</p>

<p>The prepareTransition method forces <code>display: block;</code> until the end of the transition. It does this by applying an <code>is-transitioning</code> class to the element and then using the <code>transitionEnd</code> JavaScript event to remove the class from the element. </p>

<pre><code>.dialog {
    position: absolute;
    /* and other dialoggy styles */
    opacity: 1;
    transition: opacity 1s; 
}

.is-hidden {
    display: none;
    opacity: 0;
}

<b>.is-transitioning {
    display: block !important;
    visibility: visible !important;
}</b>

// and our jQuery:
$(".btn-close").click(function(){
    $(".dialog")<b>.prepareTransition()</b>.addClass('is-hidden');
}) </code></pre>

<p>Using prepareTransition is a handy way of allowing an easy fallback design for browsers that don't support transitions while making it easier to manage transitions for browsers that do support it.</p>

<h2>Added to the specification</h2>
<p>This would be much easier if there was a <code>transitionStart</code> event, though. Then, a method wouldn't have to be run before applying the <code>is-transitioning</code> class.</p>

<p>Even better would be a pseudo-class that could be applied to an element.</p>

<pre><code>:transition {
    display: block !important;
}</code></pre>

<p>Or maybe it's just assumed that any element in transition should be display: block (and visibility: visible). In any case, we clearly need a little more at the browser implementation level to simplify this use case.</p>
	
</div>
<div class="meta">
	<div class="dt">Published January 12, 2012 </div>
	<div class="cat">Categorized as <a href="/archives/javascript/">JavaScript</a></div>
	<div class="shorturl">Short URL: <span class="url">https://snook.ca/s/1010</span></div>
</div>

<div id="comments">
	<div class="meta">
		<h2>Conversation</h2>
		<div class="commentcount">22 Comments &middot; <a href="/archives/javascript/preparetransition-jquery-plugin.rss">RSS feed</a></div>
		<div class="commentfeed"></div>
	</div>
	
		<div class="comment" id="c68748">
		<div class="meta">
			<div class="commentnumber"><a href="#c68748">1</a></div>
			<span class="authorname">Josh King</span> said on January 12, 2012		</div>
		<div class="quote"><p>Interesting way to go about it. Thanks.
</p>
</div>
	</div>
		<div class="comment" id="c68749">
		<div class="meta">
			<div class="commentnumber"><a href="#c68749">2</a></div>
			<span class="authorname">Pat Cavit</span> said on January 12, 2012		</div>
		<div class="quote"><p>The YUI 3 Transition module provides both a start &amp; end method for you as well as falling back to timer-based animations for numeric properties. It's really awesome.
</p>
</div>
	</div>
		<div class="comment" id="c68750">
		<div class="meta">
			<div class="commentnumber"><a href="#c68750">3</a></div>
			<span class="authorname">Patric Jansson</span> said on January 12, 2012		</div>
		<div class="quote"><p>How does this correlate to jquerys fadeOut() for example?
</p>
</div>
	</div>
		<div class="comment" id="c68751">
		<div class="meta">
			<div class="commentnumber"><a href="#c68751">4</a></div>
			<span class="authorname">Stephen Tudor</span> said on January 12, 2012		</div>
		<div class="quote"><p>I like your <code>transitionStart</code> idea, as it leaves the door open for a <code>transitionEnd</code> callback. CSS transitions could really use this.
</p>
</div>
	</div>
		<div class="comment snook" id="c68752">
		<div class="meta">
			<div class="commentnumber"><a href="#c68752">5</a></div>
			<span class="authorname">Jonathan Snook</span> said on January 12, 2012		</div>
		<div class="quote"><p>@Patric Jansson: fadeOut will certainly fade just as well as my example. This is reflective of my move towards using JavaScript more for describing state change (by adding and removing classes) and leaving it up to CSS to handle the styling of that state.
</p>
</div>
	</div>
		<div class="comment" id="c68753">
		<div class="meta">
			<div class="commentnumber"><a href="#c68753">6</a></div>
			<span class="authorname">Chris Coyier</span> said on January 12, 2012		</div>
		<div class="quote"><p>Here's some similar thinking on the subject by Florent Verschelde:</p>
<p>http://fvsch.com/code/transition-fade/
</p>
</div>
	</div>
		<div class="comment" id="c68754">
		<div class="meta">
			<div class="commentnumber"><a href="#c68754">7</a></div>
			<span class="authorname">Matt Reed</span> said on January 12, 2012		</div>
		<div class="quote"><p>If I'm understanding you correctly, this is similar to how the Twitter bootstrap pulls off the same effect, but they do it a little differently. They use the following (LESS):<br />
<code><br />
.fade {<br />
    .transition(opacity .15s linear);<br />
    opacity: 0;<br />
    &amp;.in {<br />
      opacity: 1;<br />
    }<br />
}</code></p>
<p>But I still hate that we have to get JS in the mix.
</p>
</div>
	</div>
		<div class="comment" id="c68755">
		<div class="meta">
			<div class="commentnumber"><a href="#c68755">8</a></div>
			<span class="authorname">Ryan Rahlf</span> said on January 12, 2012		</div>
		<div class="quote"><p>I think the issue with tracking transitions with transitionStart or :transitioning is that you don't know which transition is working.  You could have an element with two classes, one with a 1s transition of color and one with a 3s transition of scale, for example.
</p>
</div>
	</div>
		<div class="comment snook" id="c68756">
		<div class="meta">
			<div class="commentnumber"><a href="#c68756">9</a></div>
			<span class="authorname">Jonathan Snook</span> said on January 12, 2012		</div>
		<div class="quote"><p>@Ryan Rahlf: you know which transition the event fired on with <code>event.srcElement</code>. And <code>:transition</code> is a pseudo-class that could be applied to a sepecific element like <code>.dialog:transition { }</code>.
</p>
</div>
	</div>
		<div class="comment" id="c68757">
		<div class="meta">
			<div class="commentnumber"><a href="#c68757">10</a></div>
			<span class="authorname">Mike Gossmann</span> said on January 12, 2012		</div>
		<div class="quote"><p>Spec-wise, I'd love it if transitions actually handled non-animating properties instead of ignoring them. If you include something like display in the list of properties to transition, it should know that even though it can't go smoothly from one state to the other, it should jump at the end instead of the start. Even if it just respected the delay options, <a href="//jsbin.com/ulebik/6/edit#html,live">this</a> would be all you need.
</p>
</div>
	</div>
		<div class="comment" id="c68759">
		<div class="meta">
			<div class="commentnumber"><a href="#c68759">11</a></div>
			<span class="authorname">madr</span> said on January 13, 2012		</div>
		<div class="quote"><p>This was a good read, thank you. I myself has solved some similar issues by using applying the opacity transition first and a minimal setTimeout() to delay <code>.is-hidden</code>.
</p>
</div>
	</div>
		<div class="comment" id="c68762">
		<div class="meta">
			<div class="commentnumber"><a href="#c68762">12</a></div>
			<span class="authorname">Andrew</span> said on January 14, 2012		</div>
		<div class="quote"><p>If I've understood the problem correctly... I think you can achieve the fade out affect <em>and</em> hiding the element, with a width and height of zero, overflow hidden, and positioned negatively, off-screen. avoiding the need for display none.
</p>
</div>
	</div>
		<div class="comment snook" id="c68763">
		<div class="meta">
			<div class="commentnumber"><a href="#c68763">13</a></div>
			<span class="authorname">Jonathan Snook</span> said on January 14, 2012		</div>
		<div class="quote"><p>Andrew: The problem isn't in hiding the content but having the ability to push certain properties to be applied at the end of the transition for browsers that support it.
</p>
</div>
	</div>
		<div class="comment" id="c68765">
		<div class="meta">
			<div class="commentnumber"><a href="#c68765">14</a></div>
			<span class="authorname">Ryan Rahlf</span> said on January 16, 2012		</div>
		<div class="quote"><p>Sorry Jonathan, my explanation could have been more clear.  I was thinking about multiple properties being transitioned on the same element but with different durations. An example from http://www.webkit.org/blog/138/css-animation/ : </p>
<p>div {<br />
  -webkit-transition-property: opacity, left;<br />
  -webkit-transition-duration: 2s, 4s;<br />
}</p>
<p>In this case "opacity" would stop transitioning in 2 seconds, but "left" would stop in 4 seconds.  At what time would the :transitioning pseudo-class be removed?  What if each of these transitions were under different selectors, but applied to the same element, such as </p>
<p>&lt;div class=&quot;transOpacity transPosition&quot;&gt;</p>
<p>.transOpacity {<br />
  -webkit-transition-property: opacity;<br />
  -webkit-transition-duration: 2s;<br />
}<br />
.transPosition {<br />
  -webkit-transition-property: left;<br />
  -webkit-transition-duration: 4s;<br />
}</p>
<p>Different start, end, and duration of property transitions can really at a lot of richness to animation when done well.  I'd be against a spec change if it limited our ability in that regard.</p>
<p>Just my thoughts on the pseudo-class suggestion.
</p>
</div>
	</div>
		<div class="comment snook" id="c68766">
		<div class="meta">
			<div class="commentnumber"><a href="#c68766">15</a></div>
			<span class="authorname">Jonathan Snook</span> said on January 16, 2012		</div>
		<div class="quote"><p>@Ryan: different end times aren't handled by this script and that is something I'll need to look into addressing. </p>
<p>As for the spec proposal, it would work in the sense that the pseudo-class would always be applied until all transitions were complete but wouldn't really differentiate between the various transitionsâ€”just that the element is still in transition. So, in your example, div:transition would be applicable for 4s. </p>
<p>The quickest thing that comes to mind is div:transition(left) and div:transition(opacity) as potential ways of differentiating between the two.</p>
<p>Great feedback.
</p>
</div>
	</div>
		<div class="comment" id="c68773">
		<div class="meta">
			<div class="commentnumber"><a href="#c68773">16</a></div>
			<span class="authorname">Brian Feister</span> said on January 17, 2012		</div>
		<div class="quote"><p>Brilliant Jonathan!  I was using a chained animation that started with the element positioned off-screen and opacity 0.  Animate in a chain - first bring it on-screen in a 0s transition and then do the rest of the animation as a later stage in the animation chain.  This is much simpler! :)
</p>
</div>
	</div>
		<div class="comment" id="c68787">
		<div class="meta">
			<div class="commentnumber"><a href="#c68787">17</a></div>
			<span class="authorname">Ryan Cannon</span> said on January 20, 2012		</div>
		<div class="quote"><p>If we're going to start changing the spec, let's change correctly. The simple solution is to allow non-transitionable properties not to change unit the transition is supposed to start. e.g. this CSS should be enough:</p>
<pre><code>.dialog {
  transition-property: opacity, display;
  transition-duration: 0.5s, 0;
  transition-delay: 0, 0.5s;
}</code></pre>
<p>Other than that, this seems like a fairly elegant solution.
</p>
</div>
	</div>
		<div class="comment snook" id="c68791">
		<div class="meta">
			<div class="commentnumber"><a href="#c68791">18</a></div>
			<span class="authorname">Jonathan Snook</span> said on January 21, 2012		</div>
		<div class="quote"><p>@Ryan Cannon: Thankfully, they're looking to change to the spec to allow transitions between all elements and using step-start or step-end to decide when those values transition.
</p>
</div>
	</div>
		<div class="comment" id="c68833">
		<div class="meta">
			<div class="commentnumber"><a href="#c68833">19</a></div>
			<span class="authorname">troy</span> said on February 06, 2012		</div>
		<div class="quote"><p>jonathan, with this approach how do you handling animations for legacy browsers? Do you use object detection and provide a javascript fallback or drop the animations all together for these browsers?
</p>
</div>
	</div>
		<div class="comment snook" id="c68836">
		<div class="meta">
			<div class="commentnumber"><a href="#c68836">20</a></div>
			<span class="authorname">Jonathan Snook</span> said on February 07, 2012		</div>
		<div class="quote"><p>@Troy: The intention with this plug-in is to <strong>not</strong> provide a javascript animated fallback. It's best for simple transitions between states. If you wished to provide a javascript fallback, I'd use something like Modernizr instead to detect transition support.
</p>
</div>
	</div>
		<div class="comment" id="c68998">
		<div class="meta">
			<div class="commentnumber"><a href="#c68998">21</a></div>
			<span class="authorname">NICCAI</span> said on April 09, 2012		</div>
		<div class="quote"><p>I was just thinking, css needs a pseudo-class for :animating.
</p>
</div>
	</div>
		<div class="comment" id="c69123">
		<div class="meta">
			<div class="commentnumber"><a href="#c69123">22</a></div>
			<span class="authorname">Caleb Hearon</span> said on June 28, 2012		</div>
		<div class="quote"><p>Thanks, this is very useful.  I was thinking a pseudo-class for :animation-complete or :transition-complete, but having :animating or :transitioning could achieve the same results I think.
</p>
</div>
	</div>
		


		<div id="commentsclosed">Sorry, comments are closed for this post. If you have any further questions or
	comments, feel free to <a href="/contact/">send them to me directly</a>.</div>
	</div>
	</div>
	</div>
	<div id="footer">
		<div id="copyright"><div class="shell">
<p class="blurb"> Hi. My name is Jonathan Snook and this is my site. I write about what interests me, which is usually web design, development, and technology. I'm also in the middle of a <a href="https://fifty.snook.ca/">food adventure</a> and I like <a href="https://nook.snook.ca/">whisky</a>.
    <span>I wrote <a href="http://smacss.com/">SMACSS</a>.  I <a href="http://twitter.com/snookca">tweet</a>. Want to <a href="/about/">learn more</a>? </span>
</p>
			<p>&copy; Jonathan Snook</p>
		</div></div>
	</div>
</body>
</html>
