{'code': '&lt;div class="container"&gt;\r\n'
         '  &lt;div class="row"&gt;\r\n'
         '    &lt;div class="col-sm-1"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '    &lt;div class="col-sm-11"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '  &lt;div class="row"&gt;\r\n'
         '    &lt;div class="col-sm-2"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '    &lt;div class="col-sm-10"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '  &lt;div class="row"&gt;\r\n'
         '    &lt;div class="col-sm-3"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '    &lt;div class="col-sm-9"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '  &lt;div class="row"&gt;\r\n'
         '    &lt;div class="col-sm-4"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '    &lt;div class="col-sm-8"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '  &lt;div class="row"&gt;\r\n'
         '    &lt;div class="col-sm-5"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '    &lt;div class="col-sm-7"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '  &lt;div class="row"&gt;\r\n'
         '    &lt;div class="col-sm-6"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '    &lt;div class="col-sm-6"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '  &lt;div class="row"&gt;\r\n'
         '    &lt;div class="col-sm-12"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '  &lt;div class="row"&gt;\r\n'
         '    &lt;div class="col-sm"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '    &lt;div class="col-sm"&gt;\r\n'
         '    &lt;/div&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '&lt;/div&gt;',
 'desc': <div class="col-sm-12">
<p style="text-align: justify;">The grid system's basic layout is composed of three components, presented below in the order they should be added to the DOM tree:</p>
<ol style="text-align: justify;">
<li>The grid's <code>.container</code> is the outermost layer of your grid system. It is a fluid container that wraps the flexible grid system inside it.</li>
<li>Inside the container, <code>.row</code>s are added to specify each row of the grid layout. Rows serve to provide you with a simple basis for your layout's columns.</li>
<li>Finally, inside the rows, <code>.col-</code> elements are added for the columns. The columns are a little bit more complex than the container and rows, as they are what makes the layout respond to changes. There are two basic ways to define a column for your layout:
<ul>
<li>using <code>.col-<span class="fore-primary">SCR_SZ</span></code> to specify fluid columns, replacing <code><span class="fore-primary">SCR_SZ</span></code> with one of the available screen size names (<code><span class="fore-tertiary">sm</span></code> for smaller screens, <code><span class="fore-tertiary">md</span></code> for medium-sized screens or <code><span class="fore-tertiary">lg</span></code> for larger screens).</li>
<li>using <code>.col-<span class="fore-primary">SCR_SZ</span>-<span class="fore-secondary">COL_WD</span></code> to specify columns with fixed width, replacing <code><span class="fore-primary">SCR_SZ</span></code> with one of the available screen size names and <code><span class="fore-secondary">COL_WD</span></code> with a number from <code>1</code> to <code>12</code> specifying the width of the column (<code>1</code> meaning 1/12 of the width of the row and <code>12</code> meaning 100% of the width of the row).</li>
</ul>
</li>
</ol>
<h3>Sample code</h3>
<p style="text-align: justify;">The sample code is a bit lengthy, so we hid it by default to make it easier for mobile device users to read this page. Click or tap on <strong>Show sample code</strong> below to see the code sample for this example. Also, the example presented showcases the grid system's syntax for smaller screens, but you can do the same thing for any screen size.</p><br/>
<div class="container"><div class="row"><div class="tabs stacked">
<input id="grid-base-sample" type="checkbox"/>
<label for="grid-base-sample">Show sample code</label>
<div>

</div>
</div></div></div><br/>
</div>,
 'donts': ['<div class="col-sm-12 col-md-6 col-sm-last col-md-normal col-lg-4 '
           'col-lg-last">\n'
           '<pre>&lt;div class="col-sm"&gt;\r\n'
           '  &lt;div class="col-sm"&gt;\r\n'
           '  &lt;/div&gt;\r\n'
           '&lt;/div&gt;</pre>\n'
           '<p class="dont" style="text-align: justify;"><mark '
           'class="secondary">Don\'t:</mark>\xa0Avoid using columns inside '
           'columns without a row wrapping them. Either make the outer column '
           'a row in itself or wrap the inside columns in a row.</p>\n'
           '</div>',
           '<div class="col-sm-12 col-md-6 col-sm-last col-md-normal col-lg-4 '
           'col-lg-last">\n'
           '<pre>&lt;div class="row"&gt;\r\n'
           '  &lt;p&gt;Content without columns...&lt;/p&gt;\r\n'
           '&lt;/div&gt;</pre>\n'
           '<p class="dont" style="text-align: justify;"><mark '
           'class="secondary">Don\'t:</mark>\xa0Avoid using rows with content '
           'inside that is not wrapped in columns. Try to use a single '
           '<code>.col-sm</code> to wrap the content inside these, otherwise '
           'there might be unexpected behavior.</p>\n'
           '</div>',
           '<div class="col-sm-12 col-md-6 col-sm-last col-md-normal col-lg-4 '
           'col-lg-last">\n'
           '<pre>&lt;div class="container"&gt;\r\n'
           '  &lt;div class="row"&gt;\r\n'
           '    &lt;div class="col-sm"&gt;\r\n'
           '    &lt;div&gt;\r\n'
           '    &lt;/div&gt;\r\n'
           '  &lt;p&gt;Normal paragraph.&lt;/p&gt;\r\n'
           '&lt;/div&gt;\r\n'
           '<span class="fore-secondary">&lt;!-- or --&gt;</span>\r\n'
           '&lt;div class="row"&gt;\r\n'
           '  &lt;div class="col-sm"&gt;\r\n'
           '  &lt;/div&gt;\r\n'
           '  &lt;p&gt;Normal paragraph.&lt;/p&gt;\r\n'
           '&lt;/div&gt;</pre>\n'
           '<p class="dont" style="text-align: justify;"><mark '
           'class="secondary">Don\'t:</mark>\xa0Avoid mixing rows and columns '
           'with normal content that is not wrapped on the respective level of '
           'the grid system. Always wrap content inside the proper containers '
           '(container, row or column) in your grid layout.</p>\n'
           '</div>'],
 'dos': ['<div class="col-sm-12 col-md-6 col-lg-4">\n'
         '<pre>&lt;div class="col-sm"&gt;\r\n'
         '  &lt;div class="container"&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '&lt;/div&gt;\r\n'
         '<span class="fore-tertiary">&lt;!-- or --&gt;</span>\r\n'
         '&lt;div class="col-sm"&gt;\r\n'
         '  &lt;div class="row"&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '&lt;/div&gt;</pre>\n'
         '<p class="do" style="text-align: justify;"><mark '
         'class="tertiary">Do:</mark>\xa0A column can contain a container or a '
         'row inside it. The container can also be skipped if inside a column, '
         'so you only need to add a row.</p>\n'
         '</div>',
         '<div class="col-sm-12 col-md-6 col-lg-4">\n'
         '<pre>&lt;div class="col-sm row"&gt;\r\n'
         '  &lt;div class="col-sm-6"&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '  &lt;div class="col-sm-6"&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '&lt;/div&gt;</pre>\n'
         '<p class="do" style="text-align: justify;"><mark '
         'class="tertiary">Do:</mark>\xa0A column can also be a row at the '
         'same time, if you want to include sub-columns inside it. You can '
         'make the same element both a column in its own row and a row for its '
         'containing columns. The same idea can be applied for the container. '
         'Containers can, however, be omitted, when already inside a '
         'grid.</p>\n'
         '<p></p>\n'
         '</div>',
         '<div class="col-sm-12 col-md-6 col-lg-4">\n'
         '<pre>&lt;div class="row"&gt;\r\n'
         '  &lt;div class="col-sm"&gt;\r\n'
         '  &lt;div&gt;\r\n'
         '  &lt;div class="col-sm-4"&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         ' &lt;/div&gt;\r\n'
         '<span class="fore-tertiary">&lt;!-- or --&gt;</span>\r\n'
         '&lt;div class="row"&gt;\r\n'
         '  &lt;div class="col-sm-12"&gt;\r\n'
         '  &lt;div&gt;\r\n'
         '  &lt;div class="col-sm-12"&gt;\r\n'
         '  &lt;/div&gt;\r\n'
         '&lt;/div&gt;</pre>\n'
         '<p class="do" style="text-align: justify;"><mark '
         'class="tertiary">Do:</mark>\xa0Mix fluid columns with fixed, if you '
         'like. Fluid columns will adapt to the size of the container left for '
         'them. You can also use columns with a total size of more than '
         '<code>12</code>, meaning with a total width of over 100%. The '
         'remaining content will flow below the rest, allowing you to specify '
         'multiple blocks of content inside the same row if you need to.</p>\n'
         '</div>'],
 'example': <div class="col-sm-12 col-sm-last col-md-12 col-md-normal">
<div class="container"><br/>
<div class="row"><div class="col-sm-1"><div class="box-colored">1</div></div><div class="col-sm-11"><div class="box-colored">11</div></div></div>
<div class="row"><div class="col-sm-2"><div class="box-colored">2</div></div><div class="col-sm-10"><div class="box-colored">10</div></div></div>
<div class="row"><div class="col-sm-3"><div class="box-colored">3</div></div><div class="col-sm-9"><div class="box-colored">9</div></div></div>
<div class="row"><div class="col-sm-4"><div class="box-colored">4</div></div><div class="col-sm-8"><div class="box-colored">8</div></div></div>
<div class="row"><div class="col-sm-5"><div class="box-colored">5</div></div><div class="col-sm-7"><div class="box-colored">7</div></div></div>
<div class="row"><div class="col-sm-6"><div class="box-colored">6</div></div><div class="col-sm-6"><div class="box-colored">6</div></div></div>
<div class="row"><div class="col-sm-12"><div class="box-colored">12</div></div></div>
<div class="row"><div class="col-sm"><div class="box-colored">fluid</div></div><div class="col-sm"><div class="box-colored">fluid</div></div></div>
</div>
</div>,
 'id': 'basic-layout',
 'module': 'grid',
 'name': 'Basic layout',
 'notes': ['<li><strong>mini.css</strong> uses a mobile-first approach in its '
           'grid system. This means that specifying a layout for smaller '
           'device sizes will apply the same layout on medium-sized and larger '
           'screens, so you do not have to rewrite the same layout for all '
           'three screen sizes. However, if you want to change the layout on '
           'different screen sizes, check the section below.</li>',
           '<li>The <strong>grid</strong> module is compatible with modern '
           'browsers, but might not display properly in older browsers.</li>',
           '<li>The specific breakpoints for small, medium and large screen '
           'sizes are as follows:\n'
           '<ul>\n'
           '<li><strong>small</strong>: less than <code>768px</code> '
           'wide</li>\n'
           '<li><strong>medium</strong>: more than or equal to '
           '<code>768px</code> wide but less than <code>1280px</code> '
           'wide</li>\n'
           '<li><strong>large</strong>: <code>1280px</code> wide or more</li>\n'
           '</ul>\n'
           '</li>',
           '<li>Fluid columns can be used for sizes that are not of the form '
           '<code>100%/12�<span class="fore-tertiary">X</span></code> where '
           '<code><span class="fore-tertiary">X</span></code> an integer value '
           'between <code>1</code> and <code>12</code>. For example, if you '
           'have 7 <code>.col-sm</code> elements in one row, each of the '
           'elements will have a width of 1/7th the width of the row.</li>']}
